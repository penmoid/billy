name: Build and Publish Docker image

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Bump patch version
        if: github.actor != 'github-actions[bot]'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          npm version patch --no-git-tag-version
          VERSION=$(node -p "require('./package.json').version")
          cd backend && npm version $VERSION --no-git-tag-version && cd ..
          cd frontend && npm version $VERSION --no-git-tag-version && cd ..
          git add package.json package-lock.json backend/package.json backend/package-lock.json frontend/package.json frontend/package-lock.json
          git commit -m "chore: release v$VERSION"

      - name: Log in to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Determine version
        if: github.actor != 'github-actions[bot]'
        id: vars
        run: |
          VERSION=$(node -p "require('./package.json').version")
          MAJOR_TAG="$(echo "$VERSION" | cut -d. -f1).x"
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"
          echo "MAJOR_TAG=$MAJOR_TAG" >> "$GITHUB_OUTPUT"
          echo "MAJOR_TAG=$MAJOR_TAG" >> "$GITHUB_ENV"
      - name: Build and push
        if: github.actor != 'github-actions[bot]'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.VERSION }}
            ghcr.io/${{ github.repository }}:${{ env.MAJOR_TAG }}
            ghcr.io/${{ github.repository }}:latest

      - name: Verify container digests match
        if: github.actor != 'github-actions[bot]'
        run: |
          version_digest=$(docker buildx imagetools inspect ghcr.io/${{ github.repository }}:${{ env.VERSION }} | grep Digest | head -n1 | awk '{print $2}')
          latest_digest=$(docker buildx imagetools inspect ghcr.io/${{ github.repository }}:latest | grep Digest | head -n1 | awk '{print $2}')
          if [ "$version_digest" != "$latest_digest" ]; then
            echo "Digest mismatch: $version_digest vs $latest_digest"
            exit 1
          fi

      - name: Push release tag
        if: github.actor != 'github-actions[bot]'
        run: |
          VERSION=${{ env.VERSION }}
          MAJOR_TAG=${{ env.MAJOR_TAG }}
          git tag "v$VERSION"
          git tag -f "v$MAJOR_TAG"
          git push origin HEAD:${GITHUB_REF#refs/heads/}
          git push origin "v$VERSION"
          git push origin -f "v$MAJOR_TAG"
